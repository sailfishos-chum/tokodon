diff --git a/src/account/account.cpp b/src/account/account.cpp
index 045f2a9..8307e0c 100644
--- a/src/account/account.cpp
+++ b/src/account/account.cpp
@@ -146,6 +146,8 @@ QNetworkRequest Account::makeRequest(const QUrl &url, bool authenticated) const
 {
     QNetworkRequest request(url);
 
+    qInfo() << authenticated << m_token;
+
     if (authenticated && haveToken()) {
         const QByteArray bearer = QString("Bearer " + m_token).toLocal8Bit();
         request.setRawHeader("Authorization", bearer);
@@ -299,12 +301,18 @@ void Account::writeToSettings()
 
     config.save();
 
+    qInfo() << "Saving token" << m_token << accessTokenKey();
+
     auto accessTokenJob = new QKeychain::WritePasswordJob{"Tokodon", this};
+    accessTokenJob->setInsecureFallback(true);
     accessTokenJob->setKey(accessTokenKey());
     accessTokenJob->setTextData(m_token);
     accessTokenJob->start();
 
+    qInfo() << "Saving secret" << m_client_secret << clientSecretKey();
+
     auto clientSecretJob = new QKeychain::WritePasswordJob{"Tokodon", this};
+    clientSecretJob->setInsecureFallback(true);
     clientSecretJob->setKey(clientSecretKey());
     clientSecretJob->setTextData(m_client_secret);
     clientSecretJob->start();
@@ -318,6 +326,7 @@ void Account::buildFromSettings(const AccountConfig &settings)
     m_ignoreSslErrors = settings.ignoreSslErrors();
 
     auto accessTokenJob = new QKeychain::ReadPasswordJob{"Tokodon", this};
+    accessTokenJob->setInsecureFallback(true);
     accessTokenJob->setKey(accessTokenKey());
 
     QObject::connect(accessTokenJob, &QKeychain::ReadPasswordJob::finished, [this, accessTokenJob]() {
@@ -329,6 +338,7 @@ void Account::buildFromSettings(const AccountConfig &settings)
     accessTokenJob->start();
 
     auto clientSecretJob = new QKeychain::ReadPasswordJob{"Tokodon", this};
+    clientSecretJob->setInsecureFallback(true);
     clientSecretJob->setKey(clientSecretKey());
 
     QObject::connect(clientSecretJob, &QKeychain::ReadPasswordJob::finished, [this, clientSecretJob]() {
@@ -353,4 +363,4 @@ void Account::checkForFollowRequests()
             Q_EMIT hasFollowRequestsChanged();
         }
     });
-}
\ No newline at end of file
+}
